name: GitHub Actions Demo
on: [push]
jobs:
  Deploy-Backend:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Change dir to cloned repo
        run: cd ${{ github.workspace }}/backend
      - name: stop running backend
        run: docker-compose -f ${{ github.workspace }}/backend/docker-compose.prod.yml down
      - name: start backend again
        run: docker-compose -f ${{ github.workspace }}/backend/docker-compose.prod.yml up --build -d
        env:
          POSTGRES_HOST: ${{secrets.BACK_POSTGRES_HOST}}
          POSTGRES_USER: ${{secrets.BACK_POSTGRES_USER}}
          POSTGRES_DB: ${{secrets.BACK_POSTGRES_DB}}
          POSTGRES_PASSWORD: ${{secrets.BACK_POSTGRES_PASSWORD}}
          POSTGRES_PORT: ${{secrets.BACK_POSTGRES_PORT}}
          PRIVATE_KEY: ${{secrets.BACK_PRIVATE_KEY}}
      - run: echo "üçè Backend deploy status is ${{ job.status }}."

  Deploy-Frontend:
    runs-on: self-hosted
    steps:
      - name: Stop running frontend
        run: |
          pm2 stop seoul-td
          pm2 delete seoul-td
      - name: Check out repository code
        if: always()
        uses: actions/checkout@v2
      - name: Change dir to cloned repo
        if: always()
        run: cd ${{ github.workspace }}
      - name: Run npm install
        if: always()
        run: |
          npm ci
          npm run build
        env:
          REDIRECT_URI: ${{secrets.FRONT_REDIRECT_URI}}
          FORUM_API_URL: ${{secrets.FRONT_FORUM_API_URL}}
      - name: Start frontend with pm2
        if: always()
        run: pm2 start npm --no-automation --name seoul-td -- start
      - run: echo "üçè Frontend deploy status is ${{ job.status }}."
